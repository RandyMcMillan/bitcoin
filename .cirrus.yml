### Global defaults



env:
  MAKEJOBS: "-j4"
  DANGER_RUN_CI_ON_HOST: "1"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system
  TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache
  CCACHE_SIZE: "200M"
  CCACHE_DIR: "/tmp/ccache_dir"

### Base template
# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks
base_template: &BASE_TEMPLATE
  skip: $CIRRUS_REPO_FULL_NAME == "bitcoin-core/gui" && $CIRRUS_PR == "" # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution
  merge_base_script: |
    apt-get update && apt-get install -y apt-utils
    apt-get install -y git
    if [ -n "$CIRRUS_PR" ]; then
      git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH
      COMMIT_RANGE="$(git merge-base --fork-point FETCH_HEAD HEAD)..HEAD"
      git config --global user.email "ci@ci.ci"
      git config --global user.name "ci"
      git merge FETCH_HEAD  # Merge base to detect silent merge conflicts
    else
      COMMIT_RANGE="${CIRRUS_LAST_GREEN_CHANGE}..HEAD"
    fi
    export COMMIT_RANGE
    echo "CIRRUS_LAST_GREEN_CHANGE = $CIRRUS_LAST_GREEN_CHANGE"
    echo "COMMIT_RANGE = $COMMIT_RANGE"
  var_script: export HEBASTO=hebasto
  checkvar_a_script: echo $HEBASTO

### Global task template
global_task_template: &GLOBAL_TASK_TEMPLATE
  << : *BASE_TEMPLATE
  timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out
  container:
    # https://cirrus-ci.org/faq/#are-there-any-limits
    # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel
    cpu: 2
    memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers
    kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093
  ccache_cache:
    folder: "/tmp/ccache_dir"
  depends_built_cache:
    folder: "/tmp/cirrus-ci-build/depends/built"
  depends_sdk_cache:
    folder: "/tmp/cirrus-ci-build/depends/sdk-sources"
  depends_releases_cache:
    folder: "/tmp/cirrus-ci-build/releases"
  ci_script:
    - ./ci/test_run_all.sh
  checkvar_b_script: echo $HEBASTO

#task:
#  name: "Windows"
#  windows_container:
#    image: cirrusci/windowsservercore:2019
#  env:
#    CIRRUS_SHELL: powershell
#    PATH: 'C:\Python37;C:\Python37\Scripts;%PATH%'
#    PYTHONUTF8: 1
#    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/v1.6/Qt5.9.8_x64_static_vs2019.zip'
#    QT_DOWNLOAD_HASH: '9a8c6eb20967873785057fdcd329a657c7f922b0af08c5fde105cc597dd37e21'
#    QT_LOCAL_PATH: 'C:\Qt5.9.8_x64_static_vs2019'
#    VCPKG_INSTALL_PATH: 'C:\tools\vcpkg\installed'
#    VCPKG_COMMIT_ID: 'ed0df8ecc4ed7e755ea03e18aaf285fd9b4b4a74'
#  install_script:
#    - choco install python --version=3.7.7 -y

task:
  name: 'lint'
  << : *BASE_TEMPLATE
  container:
    image: ubuntu:bionic # For python 3.6, oldest supported version according to doc/dependencies.md
    cpu: 1 # Cut bill in half for linting
  # For faster CI feedback, immediately schedule the linters. https://cirrus-ci.org/pricing/#compute-credits
  use_compute_credits: $CIRRUS_REPO_FULL_NAME == 'bitcoin/bitcoin'
  setup_script:
    - set -o errexit; source ./ci/test/00_setup_env.sh
  before_install_script:
    - set -o errexit; source ./ci/test/03_before_install.sh
  install_script:
    - set -o errexit; source ./ci/lint/04_install.sh
  before_script:
    - set -o errexit; source ./ci/lint/05_before_script.sh
  lint_script:
    - set -o errexit; source ./ci/lint/06_script.sh
  checkvar_c_script: echo $HEBASTO
  