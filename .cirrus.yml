### Global defaults

env:
  MAKEJOBS: "-j4"
  TEST_RUNNER_PORT_MIN: "14000"  # Must be larger than 12321, which is used for the http cache. See https://cirrus-ci.org/guide/writing-tasks/#http-cache

# https://cirrus-ci.org/guide/tips-and-tricks/#sharing-configuration-between-tasks
base_template: &INIT_TEMPLATE
  skip: $CIRRUS_REPO_FULL_NAME == "bitcoin-core/gui" && $CIRRUS_PR == ""  # No need to run on the read-only mirror, unless it is a PR. https://cirrus-ci.org/guide/writing-tasks/#conditional-task-execution
  merge_base_script:
    - if [ "$CIRRUS_PR" = "" ]; then exit 0; fi
    - bash -c "$PACKAGE_MANAGER_INSTALL git"
    - git fetch $CIRRUS_REPO_CLONE_URL $CIRRUS_BASE_BRANCH
    - git config --global user.email "ci@ci.ci"
    - git config --global user.name "ci"
    - git merge FETCH_HEAD  # Merge base to detect silent merge conflicts
  stateful: false  # https://cirrus-ci.org/guide/writing-tasks/#stateful-tasks

base_template: &BASE_TEMPLATE
  env:
    PACKAGE_MANAGER_INSTALL: "apt-get update && apt-get install -y"
    DANGER_RUN_CI_ON_HOST: "1"  # Containers will be discarded after the run, so there is no risk that the ci scripts modify the system
    CCACHE_SIZE: "200M"
    CCACHE_DIR: "/tmp/ccache_dir"
  << : *INIT_TEMPLATE

global_task_template: &GLOBAL_TASK_TEMPLATE
  << : *BASE_TEMPLATE
  timeout_in: 120m  # https://cirrus-ci.org/faq/#instance-timed-out
  container:
    # https://cirrus-ci.org/faq/#are-there-any-limits
    # Each project has 16 CPU in total, assign 2 to each container, so that 8 tasks run in parallel
    cpu: 2
    memory: 8G  # Set to 8GB to avoid OOM. https://cirrus-ci.org/guide/linux/#linux-containers
    kvm: true  # Use kvm to avoid spurious CI failures in the default virtualization cluster, see https://github.com/bitcoin/bitcoin/issues/20093
  ccache_cache:
    folder: "/tmp/ccache_dir"
  depends_built_cache:
    folder: "/tmp/cirrus-ci-build/depends/built"
  depends_sdk_cache:
    folder: "/tmp/cirrus-ci-build/depends/sdk-sources"
  ci_script:
    - ./ci/test_run_all.sh

compute_credits_template: &CREDITS_TEMPLATE
  # https://cirrus-ci.org/pricing/#compute-credits
  # Only use credits for pull requests to the main repo
  use_compute_credits: $CIRRUS_REPO_FULL_NAME == 'bitcoin/bitcoin' && $CIRRUS_PR != ""

task:
  name: "Windows"
#  << : *INIT_TEMPLATE
  windows_container:
    cpu: 8
    memory: 7424Mi
    image: cirrusci/windowsservercore:visualstudio2019
  timeout_in: 120m
  env:
    CIRRUS_SHELL: powershell
    PATH: 'C:\Python39;C:\Python39\Scripts;C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\MSBuild\Current\Bin;%PATH%'
    PYTHONUTF8: 1
    VCPKG_TAG: '75522bb1f2e7d863078bcd06322348f053a9e33f'
    VCPKG_FEATURE_FLAGS: 'manifests'
    QT_DOWNLOAD_URL: 'https://github.com/sipsorcery/qt_win_binary/releases/download/qt598x64_vs2019_v1681/qt598_x64_vs2019_1681.zip'
    QT_DOWNLOAD_HASH: '00cf7327818c07d74e0b1a4464ffe987c2728b00d49d4bf333065892af0515c3'
    QT_LOCAL_PATH: 'C:\Qt5.9.8_x64_static_vs2019'
    IgnoreWarnIntDirInTempDetected: 'true'
  vcpkg_cache:
    folder: 'C:\Users\ContainerAdministrator\AppData\Local\vcpkg\archives'
  install_python_script:
    - choco install --yes --no-progress python --version=3.9.2
    - Write-Host ""
    - python -VV
  install_vcpkg_script:
    - cd ..
    - git clone --quiet https://github.com/microsoft/vcpkg.git
    - cd vcpkg
    - git -c advice.detachedHead=false checkout $env:VCPKG_TAG
    - .\bootstrap-vcpkg -disableMetrics
    - Add-Content "triplets\x64-windows-static.cmake" "set(VCPKG_BUILD_TYPE release)"
    - .\vcpkg integrate install
    - Write-Host ""
    - .\vcpkg version
  download_qt_binaries_script: |
      Invoke-WebRequest -Uri $env:QT_DOWNLOAD_URL -Out qtdownload.zip;
      Write-Host "Qt binaries successfully downloaded, checking hash against $env:QT_DOWNLOAD_HASH...";
      if((Get-FileHash qtdownload.zip).Hash -eq $env:QT_DOWNLOAD_HASH) {
        Expand-Archive qtdownload.zip -DestinationPath $env:QT_LOCAL_PATH;
        Write-Host "Downloaded Qt binaries archive matched the expected hash.";
      }
      else {
        Write-Host "ERROR: Downloaded Qt binaries archive did not match the expected hash.";
      }
  build_script:
    - cd $env:CIRRUS_WORKING_DIR
    - python build_msvc\msvc-autogen.py
    - msbuild build_msvc\bitcoin.sln -property:Configuration=Release -maxCpuCount -verbosity:minimal -noLogo
  unit_tests_script:
    - src\test_bitcoin.exe
    - src\bench_bitcoin.exe > $null
    - python test\util\bitcoin-util-test.py
    - python test\util\rpcauth-test.py
  functional_tests_script:
    - python test\functional\test_runner.py --ci --quiet --combinedlogslen=4000
